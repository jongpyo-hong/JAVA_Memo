Object
	- 여러 자료형을 수용할 수 있는 자료형

*지네릭스

1. 지네릭스란?
- 타입 안정성
- 형변환의 안정성

2. 지네릭스 클래스의 선언

Box<T> : 지네릭 클래스
T : 타입 매개 변수
Box : 원시타입

<T> = TYPE : 자료형 - 관례적으로 사용한다


3. 지네릭스의 용어

4. 지네릭스의 제한

5. 지네릭 클래스의 객체 생성과 사용

6. 제한된 지네릭 클래스
- extends
	-> 컴파일시 하위 클래스로 인식한다
	->  <T extens 하위클래스>로 사용가능

7. 와일드 카드
<?> -> ?extends Object

?  extends 클래스 -> 클래스를 포함 하위 클래스로(를) 제한(허용) : 상한 제한
	super 클래스 -> 클래스를 포함한 상위 클래스로(를) 제한(허용) : 하한 제한

-> 타입 : 메서드가 호출될 때
-> 지네릭 클래스 : 타입이 인스턴스가 생성될 때 결정
	-> static 형태는 사용 불가(자료형이 있어야 사용가능 하다)
	

8. 지네릭 메서드
<T extends > 를 사용
ex) public static <T extends Fruit> void make3(Box<T> fruits)

9. 지네릭 타입의 제거

* 컴파일시 명확하게 자료형이 결정되어야 컴파일이 가능하다
	- 컴파일러가 명확하게 알수있는점 -> 모든 클래스의 상위클래스는 Object

지네릭 타입   - 컴파일시 <T>가 제거된다, (컴파일이 Object로 형변환 한다)
				  -	자료형을 명확하게 알수 있는 형태로 변경 -> Object
				  - 인스턴스가 생성될 때 타입 매개변수로 지정한 자료형으로 형변환 된다