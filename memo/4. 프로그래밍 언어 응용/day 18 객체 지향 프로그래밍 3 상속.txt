싱글톤 패턴(SingleTon)

- static은 처음부터 공간이 할당되어 메모리의 낭비가 된다.
- 싱글톤은 필요할 때만 객체 생성, 공유한다
- 하나의 객체를 공유하는 디자인 패턴


**상속
1. 상속이란?

2. 클래스 상속 문법

class 하위클래스 extends 상위 클래스 {

}
C -> B -> A


super
	- 상위 클래스의 생성될 객체의 참조 지역변수(super)
	- 상위 클래스의 생성자 메서드(super())

C() -> super : B() -> super : A()
= A() -> A 인스턴스(객체), B() -> B인스턴스, C() -> C인스턴스 생성

C인스턴스 - int numC, int numB, int numA
B인스턴스 - int numB, int numA
A인스턴스 - int numA
- 하위 클래스의 범위가 더 넓다, 하위클래스가 상위 클래스를 포함한다

***다형성
- 하위 클래스가 상위 클래스 자료형으로 자동 형변환(묵시적 형변환)

상위 클래스 : 일반적인 개념
하위 클래스 : 구체적인 개념


메서드 재정의(오버라이딩)

상위 클래스와 동일한 명칭의 메서드를 하위 클래스 정의하면,
-> 하위클래스 메서드가 먼저 실행된다 ex) Animal - Human ( O ) -> Animal ( X )
																 - Dog  ( O ) -> Animal ( X )
																 - BIRD  ( X ) -> Animal ( O )

다운 캐스팅과 instanceof

@Override
-> 재정의 했음을 알려주는 정보성 주석
-> 컴파일러 체크