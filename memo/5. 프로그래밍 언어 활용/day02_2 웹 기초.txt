웹 기초

0. 요청(브라우저), 응답(서버)

1. HTTP - 프로토콜
(HyperText Trans)

2. 헤더(header)
3. HTTP 요청/응답

요청 전문
	1) 헤더(header)
		- 요청 브라우저에 대한 정보
		- 요청 URL
		- 요청 방식(GET, POST) - 용도가 다르다, 보안성X
		- 요청 브라우저 언어 설정
		- IP
		- 브라우저 정보(user agenrt ...)
		- 쿠키(Cookie)
		
	2) 바디(body)
		
	
응답 전문
	1) 헤더(header)
		- 응답 Body에 대한 정보가 담겨있다
		
		- content-type
			ex) content-type : text/html
				-> body 데이터를 HTML 로 인식
				-> DOM 객체 변환
				
		- 응답 상태 코드
				- 200~
						- 200 : OK - 정상응답
						- 201 : 작성됨(게시글 작성)
						
				- 300~
						- 301, 302 : 페이지 이동
						- 304 : 캐시됨
						
				- 400~ - 요청 쪽 문제(클라이언트 오류)
						- 400 : Bad Request - 잘못된 요청
						- 401 : Unauthorized - 권한 없음
						- 403 : forbidden - 서버에 요청이 전달되었지만, 권한 때문에 거절
						- 404 : Not Found - 페이지 없음
						- 405 : Not Allowed Method - 요청 메서드가 잘못되었다
						
				- 500~ : 서버 쪽 문제(응답시 오류)
						- 500 : Internal Server Error - 서버 문제, 코드 상의 문제
						- 503 : Service Unavailable - 임시 서비스 중단(유지 보수 기간)
		
		- 브라우저가 할 행동 정의 (명령)
			- location : 주소
				-> 브라우저의 주소창에 주소를 입력하고 이동
			- refresh : 숫자 -> 숫자 초 주기마다 새로고침
			
			- set-cookie : 브라우저 쿠키 등록
			
			- content-disposition : ...attatchment..
				-> body 데이터를 브라우저 출력이 아닌, 명시된 파일로 출력하고 다운로드 시킨다
				
	2) 바디(body)
		- 서버 응답 데이터(HTML, TEXT, 이미지 등...)
	
4. HTTP 상태 코드
5. HTTP 요청 메서드

- GET : 서버의 자원을 조회한다
		- 쿼리 스트링 : (? 키 = 값 & 키 = 값) -> 서버에서 조회를 위헤 사용하는 데이터


- POST : 데이터를 작성한다
		- header(헤더)
			- content-type
				- 요청 body의 데이터 형식
				- 정확하지 않으면 서버가 데이터를 변환X

		- body에 요청 데이터가 들어간다
			- 요청헤더 - content-type : application/x-www-form-urlencoded
			
	참고) 요청헤더 - content-type : application/json
			요청바디 - {"키" : "값", "키" : "값"}

- DELETE
- PATCH : 부분 수정
- PUT : 전체 교체(수정)


GET 방식
	- 조회 용도로만 데이터 전송(URL - 쿼리 스트링 형태)
	- 요청 BODY에 데이터가 없다
	
POST 방식
	- 데이터 작성 용도
	- 데이터는 요청 BODY