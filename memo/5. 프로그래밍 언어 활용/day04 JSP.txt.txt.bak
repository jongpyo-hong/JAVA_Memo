의존성
javax.servlet-api
javax.servlet.jsp-api

JSP의 특징 (Java Server Page)
1. JSP의 페이지 처리과정
hello3.jsp -> hello3_jsp.java

서블릿 번역 기술

------------------------------------------------------------------------------------------------------------------

2. JSP 생명주기
- 번역
- 컴파일
- 로딩 및 초기화 - _jspInit()
	Hello.jsp -> 번역 Hello_jsp.java -> 컴파일 Hello_jsp.class -> 로딩 및 초기화

- 실행 - _jspService()
- 소멸 - _jspDestroy


소스를 작성하는 대부분의 코드 -> _jspService 메서드 지역 내
	- 정의되어 있는 자원 (서버가 객체를 생성해서 사용가능)
		- request, response  
		- out.write...
		- config
		- session
		- application
		- pageContext - jsp내의 요청과 응답의 페이지 환경에 대한 정보
		
------------------------------------------------------------------------------------------------------------------
		
3. 스크립트 태그 - 자바 코드를 사용할 수 있는 태그
3-1) 선언문(declaration) - 클래스명 바로 아래에 생성, - 멤버 변수, 멤버 메서드
	<%!
		
	%>
3-2) 스크립틀릿(scriptlet) - _jspService 메서드 내에 번역, 추가가 된다 - _jspService 지역, 메서드 정의X
	<%
		자바 코드
	%>
	
3-3) 표현문(expression)
<%=변수명%>

------------------------------------------------------------------------------------------------------------------

4. 디렉티브 태그
	- JSP 페이지를 어떻게 처리할 것인지를 설정하는 태그
		<%@  ...%>
		
4-1) page : 페이지(응답 헤더)에 대한 정보
		<%@ page 속성="값" 속성="값" ... %>
			- contentType : jsp페이지가 생성할 문자 유형 설정
			- pageEncoding : jsp페이지의 문자 인코딩 설정
			- import : 사용할 자바 클래스 설정
			- session : jsp페이지의 세션 사용여부
			- buffer : jsp페이지의 출력 버퍼 크기 설정
			- autoFlush : 자동으로 출력 버퍼를 비우는것을 제어
			- isThreadSafe : jsp페이지의 멀티스레드 허용여부 설정
			- info : jsp페이지에 대한 설명 설정(서블릿 인터페이스 getServletInfo()메서드 사용)
			- errorPage : jsp페이지에 오류가 발생했을 때 보여줄 페이지 설정
			- isErrorPage : jsp 페이지가 오류 페이지인지 여부 설정						
			- isELIgnored : jsp 페이지의 표현언어(EL) 지원 여부 설정
				- EL(Expretion Language)
				${ 식 }
			- isScriptingEnabled : JSP 페이지의 스크립트 태그(선언문, 스크립틀릿, 표현문) 사용 여부 설정
		
4-2) include : 현재 JSP 페이지와 설정된 다른 외부 파일의 내용이 병합되어 번역
	<%@ include file="포함될 파일명(jsp, txt, html ...)" %>
	- 번역시 물리적으로 소스에 통합된다
	- 공통적인 소스가 있는 경우 주로 쓴다
		- ex)  <%@ include file="head.jsp" %> // head.jsp
				<h1>메인</h1> // ex03.jsp
				<%@ include file="tail.jsp" %> // tail.jsp
			-> 코드는 잘려있지만 번역은 통합이 되서 된다

4-3) taglib : 태그 형태의 라이브러리를 사용하기 위한 디렉티브 태그
	- 기능을 가지고 있는 태그
	- 외부 라이브러리
	- jstl (JSP Standard Tag Library)
		- 제어문, 반복문, 변수, URL처리, 형식화, 문자열 가공
		
		- core 라이브러리 - 제어구문, 반복문, 변수,  URL처리...
		- fmt 라이브러리 - 형식화(숫자, 문자, 통화...), 지역화(다국어, 시간대)
		- function 라이브러리 - 문자열 가공
		- sql 라이브러리 - 사용하지 않는다.
		
		- uri : 태그 라이브러리를 구분해주는 도메인 방식의 유일한 값
			prefix="c"
			ex) <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

------------------------------------------------------------------------------------------------------------------
	
5. JSP 주석처리 <%-- JSP 주석 --%>
<%
	//
	/** -> 코드 내의 주석
	
	*/
%>


------------------------------------------------------------------------------------------------------------------

6. _jspService 내에 정의된 내장 객체

- JSP 페이지에서 바로 사용 가능
	- HttpServletRequest request : 요청 정보를 담아 제공하는 객체
	- HttpServletResponse response : context-type, 응답 코드, 메세지등을 전송
	- PageContext pageContext : 현재 jsp 페이지의 환경적인 정보가 담긴 내장객체
		- ServletContext application : 서블릿 실행환경 정보가 담긴 내장객체
		- ServletConfig config : 초기 설정정보가 담긴 내장객체
		- JspWriter out : 출력 스트림인 out 내장객체
		- HttpSession session : 웹브라우저의 세션정보 내장객체
		- Object page = this : 번역된 서블릿 객체(페이지 내장 객체)
		
index.jsp -> 출력할 파일을 명시하지 않으면 -> index.jsp가 선택된다(index.html)

-----------------------------------------------------------------------------------------------------------------