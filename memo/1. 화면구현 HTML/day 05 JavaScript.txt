자바 스크립트

실습방법 안내
자바스크립트 -> 브라우저 탑재(V8)
줄개행 - Shift + Enter

Enter -> 코드 해석 -> 실행

새로고침 CTRL + R (F5)

화살표(위, 아래) - 히스토리

자바스크립트 기초 문법
1. 자바스크립트 사용하는 방법
2. 자바스크립트 주석 처리
설명
// 한줄 주석

/* 여러줄 주석 */
-> 해석엔진 무시
-> 실행 코드를 배제


3. 변수
변하는 수
바구니

- 공간의 이름
  (메모리)
  
- 변수 선언자
var 변수명; - 변수 선언

변수에 값을 지정
변수명 = 값; - 초기화(최초로 값을 지정)


선언과 동시에 초기화
var 변수명 = 값;


여러개를 동시에 선언
var 변수명 ,변수명 .... ;



참고)
console.log(값);
console.dir(객체);

4. 연산자
10 + 20

- 항 : 연산에 사용되는 값(10, 20)
		- 단항 연산
		- 이항 연산
		- 삼항 연산(삼항 조건 연산)
		
- 연산자 : 연산에 필요한 기호( + )

1) 산술연산자(이항 연산자)
	- 사칙연산 
			+, -, *, /, %(나머지 연산)
			() -> 우선순위 강제 적용
			
2) 대입연산자( = )
	- 값을변수에 저장
	- 연산의 가장 마지막에 수행
	- 연산의 우선 순위가 가장 낮다
	
3) 부호 연산자
	(+, -)
	var num = 10;
		-num = -10;
		
	- : 부호 반전
	
4) 증가감소 연산자
	- 1씩 증가(++)
	var num = num + 1; 
	- num++; 
		num2 = num++; -> num2에 대입, num연산, 대입연산자 보다 늦게 적용된다;
	- ++num; 
		num2 = ++num; -> num 연산 -> num2 대입, 대입연산자 보다 빨리 적용된다;
	
	- 1씩 감소(--)
		num--; -> 대입(1) -> 연산(2)
		--num; -> 연산(1) -> 대입(2)
		
5) 비교연산자
	>, <, >=, <=, ==(같다), !=(다르다)
	
	== -> 값의 일치(값만 비교)
	=== -> 값의 자료형(type) + 값의 일치(주소 비교)
	
	!= -> 값의 불일치(값만 비교)
	!== -> 값의 자료형(type) + 값의 일치(주소 비교)
	
	- 연산의 결과가 논리값(true, false)
	
6) 논리연산자
	AND 연산자 - &&
		두항이 모두 참일때만 참
		true && true -> true;
		true && false -> false;
		
	OR 연산자 - ||
		두항중 하나라도 참이면 참
		true || true -> true;
		true || false -> true;
		false || true -> true;
		false || false -> false;
		
	NOT 연산자 - ! 
		참 -> 거짓
		거짓 -> 참

7) 복합 대입연산자 (단항 연산)
	산술 연산자(+, -, *, /, %) + 대입(=)
	
	num = num + 2;  -> num +=2;
	num = num - 2; -> num -=2;
	num = num * 2; -> num *=2;
	num = num / 2; -> num /=2;
	num = num % 2; -> num &=2;
	
	
8) 삼항 조건 연산자
	(조건 - 참, 거짓) ( ? 참일때 : 거짓 )


	연산의 우선순위
	비교연산자 > 논리연산자
	=(대입) <  논리 < 비교 < 단항 <( ) 
	
	단락회로 평가
		- && -> 간단한 조건식 대체
		var message = "메세지";
		
		message && alert(message);
		
		- || -> 기본값
		var num;
		num = num || 10;
		
		- 두 항중 첫 항에서 조건값이 나왔다면 그 즉시 연산이 끝난다

	- 논리연산의 반환값 = 마지막 연산의 값;
	

자료형
	원시 타입 자료형
	숫자(number)
		정수
		실수
	
	문자(string)
		-> " ", ' '
		-> + : 재정의 (문자열 결합)
		-> 숫자 + 문자 -> 문자
		
	논리값(boolean)
		- 참, 거짓
		- true
			- true로 인식하는 값
				= false로 인식하는 값 이외의 모든 값 1, "A", "     "(띄어쓰기)
		- false
			- false로 인식하는 값
				= 0, ""(빈 값), undefined, null
				
	
	null : 값이 없는 상태
	undefined : 값이 정의되지 않은 상태
	
	typeof 연산자 : 자료형

객체 형태의 자료형

5. 제어문
	- 조건식
	- if (조건식 - 참, 거짓) {
		// 조건식이 참 일때 수행되는 코드
		
		
	- else (조건식 - 참, 거짓) {
		// 조건식이 거짓 일때 수행되는 코드
		
	}
		
	}
	- else if (조건식 2) {
		// 조건식1이 거짓, 조건식2가 참 일때 수행되는 코드		
	} else if (조건식 3) {
		// 조건식1, 조건식2 - 거짓
		// 조건식3 - 참
	} else {
		// 모든 조건이 거짓일 때
		}

6. 선택문
	- 값의 일치 -> 선택문
	switch(키워드) {
		case "값1" :
			// 값1과 키워드가 일치할 때 실행되는 코드
			break; -> 실행 중단
		case "값2" :
			// 값2와 키워드가 일치할 때 실행되는 코드
		
		default :
			모든 값에 일치하지 않을 때 default값을 실행한다.
}
	
7. 반복문
1) while

while (조건식) {
	// 조건식이 참 일때 반복되는 코드
}
var num = 1; - 초기값
var total = 0;

while(num <= 100) { - 조건식
    total += num;
        
    num++; - 증가식
}
100
total = 5050

2) do ~ while
do {
	// 조건식이 참 일때 반복되는 코드
	// 조건식이 거짓이라도 한번은 실행된다

} while(조건식);

var num = 1 - 초기값
total = 0;

do {
    total += num ;
    num++; -증가식
} while(num <= 100); - 조건식
100
total = 5050

3) for - 반복횟수가 정해진 경우 주로 사용한다.

for (초기화식; 조건식; 증감식) {
	// 조건이 참 일때 반복되는 코드
}

순서 - index ( i ) 0번부터 시작하는 순서
- 변수명 i
	i, j, k ....
	
중첩 반복문
- 반복문 안에 반복문

반복중단
	break
	
	
var total = 0;
for (var num( i ) = 1; // 초기값 num( i ) <= 100; // 조건식 num( i )++ // 증감식) {
    total += num( i );
}
total = 5050

ECMAScript 6 부터 추가된 데이터 타입
1. 심벌
2. 템플릿 리터럴
3. 보간 표현식