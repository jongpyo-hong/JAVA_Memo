SELECT문의 기본 혈식

DESCRIBE 테이블명; -> 테이블 정의 상세하게 확인
DESC - 동의어

1. 데이터를 조회하는 3가지 방법
- 조회

- 셀렉션 : 조회된 행
- 프로젝션 : 조회된 컬럼
- 조인 : 테이블간 연결

SELECT [ALL | DISTINCT] 컬럼명.... FROM 테이블

ALL - 기본값
DISTINCT - 중복 제거 값

SELECT ALL JOB FROM EMP;
SELECT DISTINCT JOB FROM EMP

DISTINCT JOB -> JOB 컬럼에서 중복 없는 값

DISTINCT DEPTNO, JOB
	-> DEPTNO + JOB 조합 결과에서 중복 없는 값

2. 별칭을 지정하는 방법

- SELECT 컬럼명 AS "별칭" FROM 테이블명;

EX) SELECT ENAME, (SAL * 12 +COMM) AS "연봉" FROM EMP;
-> 작은따옴표 X, 쌍따옴표나 아예 없이 기입

AS 키워드는 생략가능
" " 도 생략가능(띄어쓰기가 없을 때)
' ' = X 작은따옴표는 안된다

- 테이블의 "별칭" : AS는 반드시 생략(큰 따옴표는 생략가능)
EX) SELECT E.ENAME,(E.SAL * 12 + E.COMM)AS 연봉 FROM EMP "E";

참고)
	오라클 - "" 만 사용가능
			  - 테이블 별칭에 AS 사용불가
	
	MySQL - "", '' 모두 사용 가능
			  - 테이블 별칭에 AS 사용가능
			  
NVL(컬럼명, NULL에 대체할값) : 컬럼명이 NULL 값일 때 대체값으로 치환
EX) SELECT E.ENAME,(E.SAL * 12 + NVL(E.COMM, 0))AS 연봉 FROM EMP "E";

3. 원하는 순서로 출력 데이터를 정렬하는 ORDER BY
- 정렬

ORDER BY 컬럼명 [ASC | DESC]

ASC - 오름차순(기본값)
EX) SELECT * FROM EMP ORDER BY SAL ASC;

DESC - 내림차순
EX) SELECT * FROM EMP ORDER BY SAL DESC;

1) 부서 번호 오름차순으로 정렬
2) 부서 번호가 같으면 급여가 많은 순서대로 정렬
-> ORDER BY DEPTNO ASC, SAL DESC;

EX) 부서번호를 먼저 오름차순, 급여를 내림차순 
	SELECT * FROM EMP ORDER BY DEPTNO ASC, SAL DESC;

*조건식
더 정확하고 다양하게 결과를 출력하는 WHERE 절과 연산자

WHERE 절 - 조건식

1. 문법
SELECT ... FROM ... WHERE 조건식;

2. 여러 개 조건식을 사용하는 AND, OR 연산자
3. 연산자 종류와 활용 방법

1) 비교 연산자
	>, <, >=, <=
	
	= (같다)
	
	다르다
	- !=
	- <>
	- ^=
	
2) 논리 연산자
	AND : 조건 둘 다 참 - 교집합
	EX) SELECT * FROM EMP WHERE SAL >= 800 AND SAL<=3000;
	-> 급여가 800이상 3000이하
	
	OR : 조건 둘중 하나만 참 - 합집합
	EX) SELECT * FROM EMP WHERE JOB = 'SALESMAN' OR JOB = 'MANAGER';
	-> 직책이 'SALESMAN' 이거나 'MANAGER'
	
	NOT : 조건을 반대로
	EX) SELECT * FROM EMP WHERE NOT (JOB = 'SALESMAN' OR JOB = 'MANAGER');
	-> 직책이 'SALESMAN', 'MANAGER'을 제외한 모두

4. 집합 연산자
교집합
	INTERSECT 
	IN
합집합
	UNION
차집합
	MINUS
	

데이터 처리와 가공을 위한 오라클 함수

1. 내장 함수의 종류
- 단일행 함수
- 다중행 함수