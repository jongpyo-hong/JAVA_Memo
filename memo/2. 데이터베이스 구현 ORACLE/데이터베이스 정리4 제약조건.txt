제약조건

1) NOT NULL
	- NULL을 허용하지 않는다 : 값이 반드시 필요하다*(필수항목체크)
	- 값을 지정하지 않음
	
EX) 제약조건이 있는 테이블 생성 
	CREATE TABLE TABLE_NOTNULL (
		userId VARCHAR2(30) CONSTRAINT NN_TNN_USERID NOT NULL,
		userPw VARCHAR2(65) CONSTRAINT NN_TNN_USERPW NOT NULL,
		userNm VARCHAR2(45)
	);

EX2) 제약조건이 있는 테이블에 정보 입력
	INSERT INTO TABLE_NOTNULL (userId,userPw, userNm) VALUES ('user01',123456, '사용자01');
	
	NULL - 값이 없다 (연산불가)
	연산은 반드시 값이 있어야 가능하다
	
	오라클 : NULL == 빈값 ("") 동일하게 NULL이다
	MySQL : 빈값("")이 값의 일종이다

2) UNIQUE
	- 값의 중복을 허용하지 않는다
	- NULL값은 허용한다
	
EX) UNIQUE 제약조건이 있는 테이블 생성	
	CREATE TABLE TABLE_UNIQUE (
		userId VARCHAR2(30) CONSTRAINT UQ_TU_USERID UNIQUE,
		userPw VARCHAR2(65) CONSTRAINT UQ_TU_USERPW NOT NULL,
		userNm VARCHAR2(40) CONSTRAINT UQ_TU_USERNM NOT NULL
	);

EX2) UNIQUE 제약조건이 있는 테이블 정보 입력	
	INSERT INTO TABLE_UNIQUE VALUES ('userId', '123456', '사용자01');
	INSERT INTO TABLE_UNIQUE (userPw, userNm) VALUES ('123456','사용자01'); - id에 null값 입력

EX3) UNIQ + UNIQ 제약조건이 있는 테이블
		CREATE TABLE TABLE_UNIQUE (
		userId VARCHAR2(30),
		userPw VARCHAR2(65),
		userNm VARCHAR2(40),
		CONSTRAINT UQ_UT_USERID_USERNM UNIQUE(userId, userNm)
	);

EX4) UNIQ + UNIQ 제약조건이 있는 테이블 정보입력
	INSERT INTO TABLE_UNIQUE VALUES ('user01', 123456, '사용자01_1');


	
	CONSTRAINT_TYPE
							- C : 일반 제약조건 (NOT NULL, CHECK)
							- U : UNIQUE
							- P : 기본키 (PRIMARY KEY)
							- R : 외래키 (FOREIGN KEY)
							
	컬럼1, 컬럼2 -> 조합결과 UNIQUE
	
	
3) PRIMARY KEY
	UNIQUE + NOTNULL + 1개만 정의
	
	컬럼1 + 컬럼2 -> 조합결과 PRIMARY KEY
	
	ALTER TALBE 테이블명 ADD CONSTRAINT 제약조건명 PRIMARY KEY(컬럼명, ...);	
		EX) ALTER TABLE TABLE_NOTNULL ADD CONSTRAINT PK_TN PRIMARY KEY(userId);
	
EX) PRIMARY KEY 제약조건이 있는 테이블
	CREATE TABLE TABLE_PK (
		userId VARCHAR2(30) CONSTRAINT PK_TP PRIMARY KEY, -- 어차피 하나라 입력안함
		userPw VARCHAR2(65) CONSTRAINT NN_TP_USERPW NOT NULL,
		userNm VARCHAR2(40) CONSTRAINT NN_TP_USERNM NOT NULL
	);
	
EX2) PRIMARY KEY 제약조건이 있는 테이블 정보 입력 
	INSERT INTO TABLE_PK VALUES ('user01', 123456, '사용자01');
	
EX3) PRIMARY + PRIMARY KEY 제약조건이 있는 테이블
	CREATE TABLE TABLE_PK(
		userId VARCHAR2(30),
		userPw VARCHAR2(65),
		userNm VARCHAR2(40),
		CONSTRAINT PK_TP PRIMARY KEY(userId, userNm)
	);

EX4) INSERT INTO TABLE_PK VALUES ('user01', 123456, '사용자01');


4) FOREIGN KEY (외래키, 참조하는 키)

CREATE TABLE 테이블명 (
	컬럼명 자료형 CONSTRAINT 제약조건명 REFERENCES 테이블명 (컬럼명)
);

	제약조건 
		- 부모테이블 데이터가 자식 테이블 데이터와 연관 있으면 삭제불가
	
	삭제옵션
		- CASCADE : 연쇄삭제, 부모테이블의 데이터가 삭제되면 -> 자식데이터도 삭제한다
				CONSTRAINT 제약조건명 REFERENCES 테이블명 (컬럼명) ON DELETE CASCADE;
		- SET NULL : 부모테이블의 데이터가 삭제가 되면 -> 자식데이터의 외래키가 NULL값이 된다
				CONSTRAINT 제약조건명 REFERENCES 테이블명 (컬럼명) ON DELETE SET NULL;
		
EX) EMP, DEPT의 FOREIGN KEY 
	
	부모 테이블
	CREATE TABLE DEPT_FK (
		DEPTNO NUMBER(2) CONSTRAINT PK_DEPT_FK PRIMARY KEY,
		DNAME VARCHAR2(14),
		LOC VARCHAR2(13)
	);
	
	자식테이블
	CREATE TABLE EMP_FK (
		EMPNO NUMBER(4) CONSTRAINT PK_EMP_FK PRIMARY KEY,
		ENAME VARCHAR2(10),
		JOB VARCHAR2(9),
		MGR NUMBER(4),
		HIREDATE DATE,
		SAL NUMBER(7,2),
		COMM NUMBER(7,2),
		DEPTNO NUMBER(2) CONSTRAINT FK_EF_DEPTNO REFERENCES DEPT_FK (DEPTNO)
	);
	
	왜래키(자식테이블)이 있는 부모테이블은 삭제불가
	
	* CASCADE, SETNULL로 둘 다 삭제하거나 NULL값으로 만들수 있다
	
	EX) 삭제옵션 부가
	ALTER TABLE EMP_FK MODIFY DEPTNO NUMBER(2) 
	CONSTRAINT FK_EF_DEPTNO REFERENCES DEPT_FK(DEPTNO) ON DELETE CASCADE;
																									SET NULL;
	
	DELETE FROM DEPT_FK WHERE DEPTNO=20; 
	-> 삭제가능 (부모테이블의 DEPTNO=20값에 해당하는 컬럼 삭제)
		SET NULL = 부모테이블 삭제, 자식테이블 NULL

자식테이블 - 외래키가 있는 테이블 (EMP_FK)
부모테이블 - 자식테이블이 참조 하는 기본키가 있는 테이블 (DEPT_FK)